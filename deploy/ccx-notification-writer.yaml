# Copyright 2022 Red Hat, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Template
metadata:
  annotations:
    iconClass: icon-golang
    tags: golang
  name: ccx-notification-writer
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/path: ${IRDW_API_PREFIX}metrics
      prometheus.io/port: '8080'
      prometheus.io/scheme: http
      prometheus.io/scrape: 'true'
    labels:
      app: ccx-notification-writer
    name: ccx-notification-writer-prometheus-exporter
  spec:
    ports:
    - name: ccx-notification-writer-metrics-port
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ccx-notification-writer
    sessionAffinity: None
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: ccx-notification-writer
    name: ccx-notification-writer
  spec:
    replicas: ${{REPLICAS}}
    revisionHistoryLimit: 1
    selector:
      matchLabels:
        app: ccx-notification-writer
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: ccx-notification-writer
        name: ccx-notification-writer
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - ccx-notification-writer
                topologyKey: failure-domain.beta.kubernetes.io/zone
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - ccx-notification-writer
                topologyKey: kubernetes.io/hostname
              weight: 99
        containers:
        - env:
          - name: CCX_NOTIFICATION_WRITER__BROKER__ADDRESS
            value: ${KAFKA_BOOTSTRAP_HOST}:${KAFKA_BOOTSTRAP_PORT}
          - name: CCX_NOTIFICATION_WRITER__BROKER__TOPIC
            value: ${INCOMING_TOPIC}
          - name: CCX_NOTIFICATION_WRITER__BROKER__GROUP
            value: ${GROUP_ID}
          - name: CCX_NOTIFICATION_WRITER__BROKER__ENABLED
            value: 'true'
          - name: CCX_NOTIFICATION_WRITER__STORAGE__DB_DRIVER
            value: postgres
          - name: CCX_NOTIFICATION_WRITER__STORAGE__PG_USERNAME
            valueFrom:
              secretKeyRef:
                key: db.user
                name: ${DATABASE_SERVICE_NAME}
          - name: CCX_NOTIFICATION_WRITER__STORAGE__PG_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db.password
                name: ${DATABASE_SERVICE_NAME}
          - name: CCX_NOTIFICATION_WRITER__STORAGE__PG_HOST
            valueFrom:
              secretKeyRef:
                key: db.host
                name: ${DATABASE_SERVICE_NAME}
          - name: CCX_NOTIFICATION_WRITER__STORAGE__PG_PORT
            valueFrom:
              secretKeyRef:
                key: db.port
                name: ${DATABASE_SERVICE_NAME}
          - name: CCX_NOTIFICATION_WRITER__STORAGE__PG_DB_NAME
            valueFrom:
              secretKeyRef:
                key: db.name
                name: ${DATABASE_SERVICE_NAME}
          - name: CCX_NOTIFICATION_WRITER__STORAGE__PG_PARAMS
            value: sslmode=disable
          - name: CCX_NOTIFICATION_WRITER__STORAGE__LOG_SQL_QUERIES
            value: 'true'
          - name: CCX_NOTIFICATION_WRITER__LOGGING__DEBUG
            value: 'true'
          - name: CCX_NOTIFICATION_WRITER__LOGGING__LEVEL
            value: ''
          - name: CCX_NOTIFICATION_WRITER__METRICS__NAMESPACE
            value: ${METRICS_NAMESPACE}
          - name: CCX_NOTIFICATION_WRITER__METRICS__ADDRESS
            value: :8080
          image: quay.io/cloudservices/ccx-notification-writer:${IMAGE_TAG}
          imagePullPolicy: IfNotPresent
          name: ccx-notification-writer
          resources:
            limits:
              cpu: ${{CPU_LIMIT}}
              memory: 512Mi
            requests:
              cpu: ${{CPU_REQUEST}}
              memory: 256Mi
        imagePullSecrets:
        - name: quay-cloudservices-pull
        - name: rh-registry-pull
        initContainers:
        - command:
          - /bin/sh
          - -c
          - ./ccx-notification-writer --db-init-migration; ./ccx-notification-writer
            --db-init
          env:
          - name: CCX_NOTIFICATION_WRITER__BROKER__ADDRESS
            value: ${KAFKA_BOOTSTRAP_HOST}:${KAFKA_BOOTSTRAP_PORT}
          - name: CCX_NOTIFICATION_WRITER__BROKER__TOPIC
            value: ${INCOMING_TOPIC}
          - name: CCX_NOTIFICATION_WRITER__BROKER__GROUP
            value: ${GROUP_ID}
          - name: CCX_NOTIFICATION_WRITER__BROKER__ENABLED
            value: 'false'
          - name: CCX_NOTIFICATION_WRITER__STORAGE__DB_DRIVER
            value: postgres
          - name: CCX_NOTIFICATION_WRITER__STORAGE__PG_USERNAME
            valueFrom:
              secretKeyRef:
                key: db.user
                name: ${DATABASE_SERVICE_NAME}
          - name: CCX_NOTIFICATION_WRITER__STORAGE__PG_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db.password
                name: ${DATABASE_SERVICE_NAME}
          - name: CCX_NOTIFICATION_WRITER__STORAGE__PG_HOST
            valueFrom:
              secretKeyRef:
                key: db.host
                name: ${DATABASE_SERVICE_NAME}
          - name: CCX_NOTIFICATION_WRITER__STORAGE__PG_PORT
            valueFrom:
              secretKeyRef:
                key: db.port
                name: ${DATABASE_SERVICE_NAME}
          - name: CCX_NOTIFICATION_WRITER__STORAGE__PG_DB_NAME
            valueFrom:
              secretKeyRef:
                key: db.name
                name: ${DATABASE_SERVICE_NAME}
          - name: CCX_NOTIFICATION_WRITER__STORAGE__PG_PARAMS
            value: sslmode=disable
          - name: CCX_NOTIFICATION_WRITER__STORAGE__LOG_SQL_QUERIES
            value: 'true'
          - name: CCX_NOTIFICATION_WRITER__LOGGING__DEBUG
            value: 'true'
          - name: CCX_NOTIFICATION_WRITER__LOGGING__LEVEL
            value: ''
          - name: CCX_NOTIFICATION_WRITER__METRICS__NAMESPACE
            value: ${METRICS_NAMESPACE}
          - name: CCX_NOTIFICATION_WRITER__METRICS__ADDRESS
            value: :8080
          image: quay.io/cloudservices/ccx-notification-writer:${IMAGE_TAG}
          imagePullPolicy: Always
          name: execute-migrations
          resources:
            limits:
              cpu: ${{CPU_LIMIT}}
              memory: 300Mi
            requests:
              cpu: ${{CPU_REQUEST}}
              memory: 150Mi
parameters:
- name: IMAGE_TAG
  required: true
  value: qa
- name: CPU_REQUEST
  value: 100m
- name: CPU_LIMIT
  value: 200m
- description: The number of replicas to use in the deployment
  name: REPLICAS
  value: '1'
- name: DATABASE_SERVICE_NAME
  required: true
  value: ccx-notification-db
- name: KAFKA_BOOTSTRAP_HOST
  required: true
  value: mq-kafka
- name: KAFKA_BOOTSTRAP_PORT
  required: true
  value: '29092'
- name: INCOMING_TOPIC
  required: true
  value: ccx.ocp.results
- name: GROUP_ID
  required: true
  value: ccx_notification_app
- name: IRDW_API_PREFIX
  required: true
  value: /
- name: METRICS_NAMESPACE
  value: ccx_notification_writer
